How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I had to check the code line-by-line to find the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    By having the whole history of a file I wrote, I can easily see how the code
    evolved.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    While the pros of manually choosing to create a commit are obvious from the 
    above two points, one biggest disadvantage is the amount of time taken to 
    follow the process of commiting, everytime some changes are made.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    I think it is so because, a system like Google Docs does not have an idea 
    of a repository or a project, and multiple files being linked to each other
    in a certain way for a certain purpose. 

How can you use the commands git log and git diff to view the history of files?

    I dont know.

How might using version control make you more confident to make changes that
could break something?

    The fact that I can always get back to my earlier version and troubleshoot
    easily the broken code, gives me confidence to make changes and experiment
    with my code.

Now that you have your workspace set up, what do you want to try using Git for?

    I would start using it for practicing on git commands and become more 
    familiar with the concept of version control system.





